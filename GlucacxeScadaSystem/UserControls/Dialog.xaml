<UserControl x:Class="GlucacxeScadaSystem.UserControls.Dialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:GlucacxeScadaSystem.UserControls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
             mc:Ignorable="d"
             d:DesignHeight="200" d:DesignWidth="400"
             MinWidth="300"
             MaxWidth="500">

    <UserControl.Resources>

        <SolidColorBrush x:Key="DialogBackgroundBrush" Color="#FDFDFD"/>
        <SolidColorBrush x:Key="DialogBorderBrush" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="PrimaryActionBrush" Color="#0078D4"/>

        <SolidColorBrush x:Key="PrimaryActionHoverBrush" Color="#005A9E"/>
        <SolidColorBrush x:Key="PrimaryActionPressedBrush" Color="#004C87"/>
        <SolidColorBrush x:Key="SecondaryActionBorderBrush" Color="#ACACAC"/>
        <SolidColorBrush x:Key="SecondaryActionHoverBackgroundBrush" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="SecondaryActionPressedBackgroundBrush" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="TextPrimaryBrush" Color="#212121"/>
        <SolidColorBrush x:Key="TextSecondaryBrush" Color="#555555"/>
        <SolidColorBrush x:Key="TextOnPrimaryBrush" Color="White"/>


        <Style TargetType="Button" x:Key="ModernDialogButtonBase">
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="PART_Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="PART_Border" Property="Opacity" Value="0.9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="PART_Border" Property="Opacity" Value="0.75"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="PrimaryDialogButton" BasedOn="{StaticResource ModernDialogButtonBase}">
            <Setter Property="Background" Value="{StaticResource PrimaryActionBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextOnPrimaryBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryActionBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryActionHoverBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryActionHoverBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PrimaryActionPressedBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryActionPressedBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="Button" x:Key="SecondaryDialogButton" BasedOn="{StaticResource ModernDialogButtonBase}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource SecondaryActionBorderBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryActionHoverBackgroundBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource SecondaryActionPressedBackgroundBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>


    <Border Background="{StaticResource DialogBackgroundBrush}"
            BorderBrush="{StaticResource DialogBorderBrush}"
            BorderThickness="1"
            CornerRadius="8"
            Padding="24">
        <Border.Effect>
            <DropShadowEffect Color="#AAAAAA" Direction="270" ShadowDepth="3" BlurRadius="10" Opacity="0.3"/>
        </Border.Effect>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />

                <RowDefinition Height="Auto"/>

            </Grid.RowDefinitions>


            <TextBlock x:Name="TextBlock"
                       Grid.Row="0"
                       Margin="0,0,0,24" 
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       TextWrapping="Wrap"
                       FontSize="14"
                       Foreground="{StaticResource TextPrimaryBrush}"/>


            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">


                <StackPanel x:Name="StackPanelOk" Visibility="Collapsed">
                    <Button Content="确定"
                            Style="{StaticResource PrimaryDialogButton}"
                            IsDefault="True"
                            IsCancel="True"
                            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"/>
                </StackPanel>


                <StackPanel x:Name="StackPanelYesOrNo" Visibility="Collapsed" Orientation="Horizontal">

                    <Button Content="确定"
                            Style="{StaticResource PrimaryDialogButton}"
                            IsDefault="True"
                            IsCancel="False"
                            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                        <Button.CommandParameter>
                            <system:Boolean>True</system:Boolean>
                        </Button.CommandParameter>
                    </Button>

                    <!-- No Button -->
                    <Button Content="取消"
                            Margin="8,0,0,0"
                            Style="{StaticResource SecondaryDialogButton}"
                            IsDefault="False"
                            IsCancel="True"
                            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                        <Button.CommandParameter>
                            <system:Boolean>False</system:Boolean>
                        </Button.CommandParameter>
                    </Button>
                </StackPanel>

            </StackPanel>
        </Grid>
    </Border>
</UserControl>